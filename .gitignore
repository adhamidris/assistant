# AI Personal Business Assistant - .gitignore
# Comprehensive ignore rules for Django + Next.js project

# =============================================================================
# SECURITY AND SENSITIVE FILES - CRITICAL
# =============================================================================

# Environment variables - NEVER commit these
.env
.env.local
.env.development
.env.test
.env.production
.env.staging
.env.sample
.env.template

# API keys and secrets - NEVER commit these
secrets.json
config.json
credentials.json
service-account-key.json
api_keys.json
keys.json

# SSL certificates
*.pem
*.key
*.crt
*.csr

# Django settings with sensitive data
local_settings.py
settings_local.py
settings_production.py
settings_secret.py

# =============================================================================
# PYTHON / DJANGO BACKEND
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
# lib/  # COMMENTED OUT - This was ignoring frontend/src/lib/ directory
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws
.idea/
*.iml
*.ipr
*.iws

# =============================================================================
# DJANGO SPECIFIC
# =============================================================================

# Django database files
*.sqlite3
*.db
*.sqlite

# Django media files
media/
uploads/

# Django static files (if collected)
staticfiles/
static_collected/

# Django migrations (uncomment if you want to ignore migrations)
# migrations/

# Django cache
.cache/

# =============================================================================
# NEXT.JS / REACT FRONTEND
# =============================================================================

# Dependencies
node_modules/
/.pnp
.pnp.js
.yarn/install-state.gz

# Testing
/coverage

# Next.js
/.next/
/out/

# Production
/build

# Misc
.DS_Store
*.pem

# Debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# Local env files
.env*.local

# Vercel
.vercel

# TypeScript
*.tsbuildinfo
# next-env.d.ts  # COMMENTED OUT - This is needed for Next.js projects

# =============================================================================
# DATABASE FILES
# =============================================================================

# SQLite
*.sqlite3
*.db
*.sqlite

# PostgreSQL
*.psql

# MySQL
*.mysql

# Redis dump files
dump.rdb

# =============================================================================
# LOGS AND DEBUGGING
# =============================================================================

# Log files
# logs/  # COMMENTED OUT - Backend needs this directory to exist
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.parcel-cache

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
# public  # COMMENTED OUT - This would ignore the public directory needed for Next.js

# Vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================

# IDE and Editor files
.vscode/
*.swp
*.swo
*~

# OS generated files
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
*.bak
*.backup

# =============================================================================
# PROJECT SPECIFIC
# =============================================================================

# Test files (uncomment if you want to ignore test files)
# test_*.py
# *_test.py

# Documentation builds
docs/_build/
site/

# Backup files
*.old

# Archive files
*.zip
*.tar.gz
*.rar

# =============================================================================
# DOCKER
# =============================================================================

# Docker
.dockerignore
docker-compose.override.yml

# =============================================================================
# MONITORING AND ANALYTICS
# =============================================================================

# Sentry
.sentryclirc

# =============================================================================
# CUSTOM PROJECT FILES
# =============================================================================

# Project-specific files that should be ignored
# Add any project-specific files here

# AI model files (if any)
models/
*.model
*.pkl
*.joblib

# Large data files (but NOT package.json, tsconfig.json, etc.)
data/
datasets/
*.csv
# *.json  # COMMENTED OUT - This would ignore package.json, tsconfig.json, etc.
*.xml

# Cache directories
.cache/
cache/

# Temporary uploads
temp/
tmp/
uploads/

# =============================================================================
# GIT
# =============================================================================

# Git
.git/
# .gitattributes  # COMMENTED OUT - This would ignore .gitattributes file

# =============================================================================
# BACKUP AND ARCHIVE
# =============================================================================

# Backup files
*.orig

# Archive files
*.7z

# =============================================================================
# PERFORMANCE AND MONITORING
# =============================================================================

# Performance monitoring
*.perf
*.profile

# Memory dumps
*.dmp
*.hprof

# =============================================================================
# END OF .gitignore
# =============================================================================
*.log
