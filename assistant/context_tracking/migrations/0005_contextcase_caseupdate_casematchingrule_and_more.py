# Generated by Django 5.1.5 on 2025-08-24 13:41

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('context_tracking', '0004_add_ai_agents'),
        ('core', '0007_remove_conversation_unique_active_conversation_per_session'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContextCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('case_type', models.CharField(db_index=True, max_length=100)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('pending', 'Pending'), ('closed', 'Closed'), ('escalated', 'Escalated'), ('resolved', 'Resolved')], db_index=True, default='open', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], db_index=True, default='medium', max_length=20)),
                ('extracted_data', models.JSONField(db_index=True, default=dict)),
                ('business_parameters', models.JSONField(default=dict)),
                ('matching_criteria', models.JSONField(default=dict)),
                ('intent_analysis', models.JSONField(default=dict)),
                ('confidence_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('last_ai_update', models.DateTimeField(auto_now=True)),
                ('related_messages', models.JSONField(default=list)),
                ('conversation_id', models.CharField(blank=True, db_index=True, max_length=100)),
                ('customer_identifier', models.CharField(blank=True, db_index=True, max_length=200)),
                ('hash_signature', models.CharField(db_index=True, max_length=64)),
                ('similarity_threshold', models.FloatField(default=0.8)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('created_by_ai', models.BooleanField(default=True)),
                ('manual_override', models.BooleanField(default=False)),
                ('source_channel', models.CharField(blank=True, max_length=50)),
                ('assigned_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.aiagent')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='context_cases', to='core.workspace')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='CaseUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_type', models.CharField(db_index=True, max_length=50)),
                ('previous_data', models.JSONField(default=dict)),
                ('new_data', models.JSONField(default=dict)),
                ('update_source', models.CharField(db_index=True, max_length=100)),
                ('confidence_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('ai_reasoning', models.TextField(blank=True)),
                ('parameters_updated', models.JSONField(default=list)),
                ('updated_by', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='context_tracking.contextcase')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CaseMatchingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_name', models.CharField(max_length=200)),
                ('case_type', models.CharField(max_length=100)),
                ('matching_fields', models.JSONField(default=list)),
                ('matching_strategy', models.CharField(choices=[('exact', 'Exact Match'), ('fuzzy', 'Fuzzy Match'), ('semantic', 'Semantic Similarity'), ('hybrid', 'Hybrid Approach')], default='hybrid', max_length=20)),
                ('similarity_threshold', models.FloatField(default=0.8, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('field_weights', models.JSONField(default=dict)),
                ('action_on_match', models.CharField(choices=[('update', 'Update Existing Case'), ('create_new', 'Create New Case'), ('merge', 'Merge Cases'), ('flag_duplicate', 'Flag as Duplicate')], default='update', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_matching_rules', to='core.workspace')),
            ],
            options={
                'ordering': ['-priority', 'created_at'],
                'indexes': [models.Index(fields=['workspace', 'case_type'], name='context_tra_workspa_8f2fb8_idx'), models.Index(fields=['is_active', 'priority'], name='context_tra_is_acti_01934b_idx')],
            },
        ),
        migrations.CreateModel(
            name='CaseTypeConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_type', models.CharField(max_length=100, unique=True)),
                ('display_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('data_schema', models.JSONField(default=dict)),
                ('required_fields', models.JSONField(default=list)),
                ('optional_fields', models.JSONField(default=list)),
                ('auto_creation_enabled', models.BooleanField(default=True)),
                ('duplicate_prevention_enabled', models.BooleanField(default=True)),
                ('auto_close_conditions', models.JSONField(default=dict)),
                ('display_fields', models.JSONField(default=list)),
                ('sort_fields', models.JSONField(default=list)),
                ('filter_options', models.JSONField(default=dict)),
                ('status_workflow', models.JSONField(default=list)),
                ('default_status', models.CharField(default='open', max_length=20)),
                ('default_priority', models.CharField(default='medium', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_type_configs', to='core.workspace')),
            ],
            options={
                'indexes': [models.Index(fields=['workspace', 'case_type'], name='context_tra_workspa_0994a1_idx'), models.Index(fields=['is_active'], name='context_tra_is_acti_9dfd06_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='contextcase',
            index=models.Index(fields=['workspace', 'status', '-updated_at'], name='context_tra_workspa_ed3c5a_idx'),
        ),
        migrations.AddIndex(
            model_name='contextcase',
            index=models.Index(fields=['workspace', 'case_type', 'status'], name='context_tra_workspa_0ac4ad_idx'),
        ),
        migrations.AddIndex(
            model_name='contextcase',
            index=models.Index(fields=['hash_signature'], name='context_tra_hash_si_5da470_idx'),
        ),
        migrations.AddIndex(
            model_name='contextcase',
            index=models.Index(fields=['customer_identifier', 'workspace'], name='context_tra_custome_2a4d31_idx'),
        ),
        migrations.AddIndex(
            model_name='contextcase',
            index=models.Index(fields=['conversation_id'], name='context_tra_convers_4354ee_idx'),
        ),
        migrations.AddIndex(
            model_name='contextcase',
            index=models.Index(fields=['workspace', 'priority', 'status'], name='context_tra_workspa_d4e94d_idx'),
        ),
        migrations.AddIndex(
            model_name='caseupdate',
            index=models.Index(fields=['case', '-timestamp'], name='context_tra_case_id_2cead1_idx'),
        ),
        migrations.AddIndex(
            model_name='caseupdate',
            index=models.Index(fields=['update_type', 'update_source'], name='context_tra_update__34b9de_idx'),
        ),
    ]
