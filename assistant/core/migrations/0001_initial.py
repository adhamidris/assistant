# Generated by Django 5.2.5 on 2025-08-20 12:21

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_e164', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message='Phone number must be in E.164 format (e.g., +1234567890)', regex='^\\+[1-9]\\d{1,14}$')])),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'contacts',
            },
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('auto_reply_mode', models.BooleanField(default=True)),
                ('assistant_name', models.CharField(default='Assistant', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('google_calendar_connected', models.BooleanField(default=False)),
                ('google_refresh_token', models.TextField(blank=True, null=True)),
                ('google_calendar_id', models.CharField(blank=True, max_length=255, null=True)),
                ('business_hours', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'db_table': 'workspaces',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_token', models.CharField(max_length=255, unique=True)),
                ('last_seen_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='core.contact')),
            ],
            options={
                'db_table': 'sessions',
            },
        ),
        migrations.AddField(
            model_name='contact',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='core.workspace'),
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('resolved', 'Resolved'), ('archived', 'Archived')], default='active', max_length=20)),
                ('last_intent', models.CharField(choices=[('inquiry', 'General Inquiry'), ('request', 'Service Request'), ('complaint', 'Complaint'), ('appointment', 'Appointment Request'), ('other', 'Other')], default='other', max_length=20)),
                ('summary', models.TextField(blank=True, help_text='AI-generated conversation summary', null=True)),
                ('key_points', models.JSONField(blank=True, default=list, help_text='Key points extracted from conversation')),
                ('resolution_status', models.CharField(blank=True, help_text='AI-determined resolution status', max_length=20, null=True)),
                ('action_items', models.JSONField(blank=True, default=list, help_text='Action items identified by AI')),
                ('sentiment_score', models.IntegerField(default=3, help_text='Customer satisfaction score (1-5)')),
                ('sentiment_data', models.JSONField(blank=True, default=dict, help_text='Detailed sentiment analysis results')),
                ('extracted_entities', models.JSONField(blank=True, default=dict, help_text='Entities extracted from conversation')),
                ('conversation_metrics', models.JSONField(blank=True, default=dict, help_text='Conversation metrics and statistics')),
                ('insights_generated_at', models.DateTimeField(blank=True, help_text='When AI insights were last generated', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='core.contact')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='core.session')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='core.workspace')),
            ],
            options={
                'db_table': 'conversations',
                'ordering': ['-updated_at'],
                'indexes': [models.Index(fields=['workspace', '-updated_at'], name='conversatio_workspa_5032d3_idx'), models.Index(fields=['status', '-updated_at'], name='conversatio_status_72f0d4_idx'), models.Index(fields=['sentiment_score', '-updated_at'], name='conversatio_sentime_53d12a_idx'), models.Index(fields=['resolution_status', '-updated_at'], name='conversatio_resolut_e1a681_idx')],
            },
        ),
        migrations.AlterUniqueTogether(
            name='contact',
            unique_together={('workspace', 'phone_e164')},
        ),
    ]
